Os exit handler sao executados na ordem inversa da sua instalação.

"Set function to be executed on exit
The function pointed by func is automatically called without arguments when the program terminates normally.

If more than one atexit function has been specified by different calls to this function, they are all executed in reverse order as a stack (i.e. the last function specified is the first to be executed at exit).

A single function can be registered to be executed at exit more than once.

If atexit is called after exit, the call may or may not succeed depending on the particular system and library implementation (unspecified behavior).

If a function registered with atexit throws an exception for which it does not provide a handler when called on termination, terminate is automatically called (C++).

Particular library implementations may impose a limit on the number of functions call that can be registered with atexit, but this cannot be less than 32 function calls."

----- Usar abort()

abort()-->Aborts the current process, producing an abnormal program termination.


Caso se faça "abort()" antes de printf("Main done") o programa termina sem imprimir nada. 
Se for apos o printf("Main done"), o programa nao executa os handlers.

----- Um dos handlers terminar com exit()

Nao acontece nada.
	


